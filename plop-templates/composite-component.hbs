import classnames from 'classnames';
import type { JSX } from 'preact';

import type { CompositeProps } from '../../types';
import { downcastRef } from '../../util/typing';

type ComponentProps = {
  size?: 'sm' | 'md' | 'lg';
  variant?: 'primary' | 'secondary';
};

type HTMLAttributes = Omit<JSX.HTMLAttributes<HTMLElement>, 'size'>;

export type {{name}}Props = CompositeProps &
  ComponentProps &
  Omit<HTMLAttributes, 'size'>;

/**
 * TODO
 */
const {{name}}Next = function {{name}}({
  children,
  elementRef,

  size = 'md',
  variant = 'secondary',

  ...htmlAttributes
}:{{name}}Props) {
  return (
    <div
      {...htmlAttributes}
      ref={downcastRef(elementRef)}
      className={classnames(
        'border',
        {
          'bg-slate-0 text-color-text': variant === 'secondary', // default
          'bg-grey-7 text-color-text-inverted': variant === 'primary',
        },
        {
          'p-3': size === 'md', // default
          'p-2': size === 'sm',
          'p-4': size === 'lg',
        },
      )}
      data-composite-component="{{name}}"
    >
      {children}
    </div>
  );
};

export default {{name}}Next;
