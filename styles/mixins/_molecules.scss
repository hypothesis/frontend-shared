@use '../variables' as var;

@use 'atoms';
@use 'layout';

$-border-radius: var.$border-radius;
$-color-background: var.$color-background;
$-space: var.$layout-space;

/**
 * Patterns that are composites of multiple atomic utilities, but
 * are not standalone components.
 */

/**
 * Give an element a border, a background and a shadow. Underpinning for
 * cards and panels.
 *
 * @param {boolean} [$with-hover] - Should this frame have a hover effect?
 */
@mixin frame($with-hover: false) {
  @include atoms.border;
  @include atoms.shadow;

  border-radius: $-border-radius;
  background-color: $-color-background;

  @if $with-hover {
    &:hover,
    &.is-focused {
      @include atoms.shadow($active: true);
    }
  }
}

/**
 * An element with a frame, shadow, internal vertical rhythm and padding:
 * serves as a container for card- and panel-like patterns.
 */
@mixin card {
  @include frame($with-hover: true);
  @include layout.vertical-rhythm;

  width: 100%;
  padding: $-space;

  // TODO: Add clean-theme affordances
}

/**
 * A container that lays out a collection of actionsâ€”typically buttons. Default
 * to a row layout, but also available as `column`.
 *
 * @param {'row'|'column'} [$direction]
 */
@mixin actions($direction: row) {
  @if $direction == row {
    @include layout.row(right);
    @include layout.horizontal-rhythm($-space * 0.75);
  } @else {
    @include layout.column;
    @include layout.vertical-rhythm($-space * 0.5);
  }
}
