@use '../../variables' as var;

@use '../atoms';
@use '../layout';

$-border-radius: var.$border-radius;
$-color-background: var.$color-background;
$-space: var.$layout-space;

/**
 * Patterns that are composites of multiple atomic utilities, but
 * are not standalone components.
 */

/**
 * Give an element a border, background color and internal vertical spacing
 */
@mixin frame($with-hover: false) {
  @include atoms.border;
  @include layout.vertical-rhythm;

  padding: $-space;
  border-radius: $-border-radius;
  background-color: $-color-background;
}

/**
 * A frame with a shadow and (optional) shadow hover effect. Fills available
 * horizontal space.
 *
 * @param {boolean} [$with-hover] - Should this frame have a hover effect?
 */
@mixin card($with-hover: true) {
  @include frame;
  @include atoms.shadow;
  @if $with-hover {
    &:hover,
    &.is-focused {
      @include atoms.shadow($active: true);
    }
  }
  width: 100%;

  // TODO: Add clean-theme affordances
}

/**
 * A container that lays out a collection of actionsâ€”typically buttons. Default
 * to a row layout, but also available as `column`.
 *
 * @param {'row'|'column'} [$direction]
 */
@mixin actions($direction: row) {
  @if $direction == row {
    @include layout.row(right);
    @include layout.horizontal-rhythm($-space * 0.75);
  } @else {
    @include layout.column;
    @include layout.vertical-rhythm($-space * 0.5);
  }
}

// A responsive sized and positioned container for modal content
@mixin modal {
  // The modal container is positioned horizontally- and vertically-centered
  @include layout.fixed-centered;

  // This sizing applies to smaller viewports
  width: 90vw;
  max-width: 90vw;
  max-height: 90vh;

  // For viewports with more horizontal room, adjust width.
  // Set a reasonable min-width on the modal so it doesn't look too dinky,
  // and a max-width so it doesn't stretch too wide.
  @media screen and (min-width: 48rem) {
    width: auto;
    min-width: 28rem;
    max-width: 44rem; // default for older browsers
    max-width: min(44rem, 90vw);
  }

  // For viewports with more vertical room, adjust vertical positioning to
  // near the top of the viewport.
  @media screen and (min-height: 32rem) {
    top: 10vh;
    transform: translate(-50%, 0);
    max-height: 80vh; // 10vh space top and bottom
  }
}
