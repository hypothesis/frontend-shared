@use '../../variables' as var;

@use '../atoms';
@use '../focus';
@use '../layout';

@use './containers';

// TODO: Extract these to colors if adopted
// These two colors are adapted from https://hypothesis-pattern-library.netlify.app/helpers
$-color-background--inverted: #595969;
// 8-bit HEX with opacity
$-color-background-hover: #babac444;

// This background-border combination is novel.
// TODO: Extract into pattern if adopted
$-color-header-background: var.$color-grey-2;
$-color-header-border: var.$color-grey-5;

$-color-text--inverted: var.$color-white;
$-min-row-height: var.$touch-target-size;

@mixin table {
  @include focus.outline-on-keyboard-focus;

  // Keep separate borders (this is browser default) to allow control over
  // the borders of the sticky-positioned top header row: this is needed to
  // prevent gaps at the top of the <thead> row that scrolling content could peek
  // through, and to assert control over the sticky-<th> borders as positioning
  // changes.
  border-collapse: separate;
  border-spacing: 0;
  // Allow th styles to define overall column widths for table
  table-layout: fixed;
  width: 100%;
  color: var.$color-text;

  th,
  td {
    @include layout.padding;
    // Prevent extra vertical height with <th> elements
    // FIXME: Review after typography patterns introduced
    line-height: 1;
  }

  td {
    @include atoms.border(top);
  }

  &__header {
    @include containers.sticky-header;
    border-bottom: 1px solid $-color-header-border;
    background-color: $-color-header-background;
    // Ensure the header is displayed above content in the table when it is
    // scrolled, including any content which establishes a new stacking context.
    z-index: 1;
    text-align: left;
  }

  tbody {
    // Make table content look interact-able
    cursor: pointer;
  }

  tr {
    height: $-min-row-height;
    @include layout.padding;
  }

  // No border on top of first row's <td> elements, to eliminate a
  // double border with the <th>s
  tr:first-child td {
    border-top: none;
  }

  tr.is-selected td {
    background-color: $-color-background--inverted;
    color: $-color-text--inverted;
  }

  tr:hover:not(.is-selected) {
    background-color: $-color-background-hover;
  }

  tr:nth-child(odd):not(.is-selected) {
    // Need a low-opacity black versus a named greyscale color because
    // this background needs to be very low opacity so as not to obscure
    // scroll-hinting shadows
    background-color: rgba(0, 0, 0, 0.025);
  }
}
